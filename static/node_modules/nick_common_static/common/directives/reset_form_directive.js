/**
 * Created by NICK on 15/7/28.
 * email:nick121212@126.com
 * qq:289412378
 * copyright NICK
 */
define(["require", "exports"], function (require, exports) {
    var base = (function () {
        function base() {
        }
        base.arrayRemove = function (array, value) {
            var index = base.indexOf(array, value);
            if (index >= 0)
                array.splice(index, 1);
            return value;
        };
        base.indexOf = function (array, obj) {
            if (array.indexOf)
                return array.indexOf(obj);
            for (var i = 0; i < array.length; i++) {
                if (obj === array[i])
                    return i;
            }
            return -1;
        };
        base.createDir = function (isNgForm) {
            var directive = {};
            directive.restrict = 'E';
            directive.require = ['form'];
            directive.compile = function () {
                return {
                    pre: function (scope, element, attrs, ctrls) {
                        var form = ctrls[0], $addControl = form.$addControl, $removeControl = form.$removeControl, controls = [];
                        form.$addControl = function (control) {
                            controls.push(control);
                            $addControl.apply(this, arguments);
                        };
                        form.$removeControl = function (control) {
                            base.arrayRemove(controls, control);
                            $removeControl.apply(this, arguments);
                        };
                        form.$setPristine = function () {
                            element.removeClass(base.DIRTY_CLASS).addClass(base.PRISTINE_CLASS);
                            form.$dirty = false;
                            form.$pristine = true;
                            angular.forEach(controls, function (control) {
                                control.$setPristine();
                            });
                        };
                    }
                };
            };
            return [function () {
                    return isNgForm ? angular.extend(angular.copy(directive), { restrict: 'EAC' }) : directive;
                }];
        };
        base.PRISTINE_CLASS = 'ng-pristine';
        base.DIRTY_CLASS = 'ng-dirty';
        return base;
    })();
    var NgFormDirective = (function () {
        function NgFormDirective() {
        }
        NgFormDirective._name = 'ngForm';
        NgFormDirective.directive = base.createDir(true);
        return NgFormDirective;
    })();
    exports.NgFormDirective = NgFormDirective;
    var FormDirective = (function () {
        function FormDirective() {
        }
        FormDirective._name = 'form';
        FormDirective.directive = base.createDir(false);
        return FormDirective;
    })();
    exports.FormDirective = FormDirective;
    var NgModelDirective = (function () {
        function NgModelDirective() {
        }
        NgModelDirective._name = 'ngModel';
        NgModelDirective.directive = [function () {
                var directive = {};
                directive.require = ['ngModel'];
                directive.link = function (scope, element, attrs, ctrls) {
                    var control = ctrls[0];
                    control.$setPristine = function () {
                        this.$dirty = false;
                        this.$pristine = true;
                        element.removeClass(base.DIRTY_CLASS).addClass(base.PRISTINE_CLASS);
                    };
                };
                return directive;
            }];
        return NgModelDirective;
    })();
    exports.NgModelDirective = NgModelDirective;
});
//# sourceMappingURL=reset_form_directive.js.map